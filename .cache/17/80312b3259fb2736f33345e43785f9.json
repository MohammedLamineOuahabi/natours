{"id":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","dependencies":[{"name":"C:\\Users\\DevAppMed\\Desktop\\MyProjects\\courses_materiels\\complete-node-bootcamp-master\\1 - Practice\\complete-node-bootcamp\\package.json","includedInParent":true,"mtime":1584009220628},{"name":"C:\\Users\\DevAppMed\\Desktop\\MyProjects\\courses_materiels\\complete-node-bootcamp-master\\1 - Practice\\complete-node-bootcamp\\.babelrc","includedInParent":true,"mtime":1583857449244},{"name":"C:\\Users\\DevAppMed\\Desktop\\MyProjects\\courses_materiels\\complete-node-bootcamp-master\\1 - Practice\\complete-node-bootcamp\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1583781485846},{"name":"./_metadata","loc":{"line":1,"column":23},"parent":"C:\\Users\\DevAppMed\\Desktop\\MyProjects\\courses_materiels\\complete-node-bootcamp-master\\1 - Practice\\complete-node-bootcamp\\node_modules\\core-js\\modules\\es7.reflect.delete-metadata.js","resolved":"C:\\Users\\DevAppMed\\Desktop\\MyProjects\\courses_materiels\\complete-node-bootcamp-master\\1 - Practice\\complete-node-bootcamp\\node_modules\\core-js\\modules\\_metadata.js"},{"name":"./_an-object","loc":{"line":2,"column":23},"parent":"C:\\Users\\DevAppMed\\Desktop\\MyProjects\\courses_materiels\\complete-node-bootcamp-master\\1 - Practice\\complete-node-bootcamp\\node_modules\\core-js\\modules\\es7.reflect.delete-metadata.js","resolved":"C:\\Users\\DevAppMed\\Desktop\\MyProjects\\courses_materiels\\complete-node-bootcamp-master\\1 - Practice\\complete-node-bootcamp\\node_modules\\core-js\\modules\\_an-object.js"}],"generated":{"js":"var metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar toMetaKey = metadata.key;\nvar getOrCreateMetadataMap = metadata.map;\nvar store = metadata.store;\n\nmetadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {\n  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);\n  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;\n  if (metadataMap.size) return true;\n  var targetMetadata = store.get(target);\n  targetMetadata['delete'](targetKey);\n  return !!targetMetadata.size || store['delete'](target);\n} });\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}}],"sources":{"../../node_modules/core-js/modules/es7.reflect.delete-metadata.js":"var metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar toMetaKey = metadata.key;\nvar getOrCreateMetadataMap = metadata.map;\nvar store = metadata.store;\n\nmetadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {\n  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);\n  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;\n  if (metadataMap.size) return true;\n  var targetMetadata = store.get(target);\n  targetMetadata['delete'](targetKey);\n  return !!targetMetadata.size || store['delete'](target);\n} });\n"},"lineCount":16}},"error":null,"hash":"c087378e1fc0e32a217754699f3c5061","cacheData":{"env":{}}}